Index: gajim-0.14.4/src/common/connection_handlers.py
===================================================================
--- gajim-0.14.4.orig/src/common/connection_handlers.py	2011-05-31 18:00:32.000000000 +0200
+++ gajim-0.14.4/src/common/connection_handlers.py	2011-10-12 21:24:00.649106614 +0200
@@ -1607,6 +1607,8 @@
             if keyID:
                 def decrypt_thread(encmsg, keyID):
                     decmsg = self.gpg.decrypt(encmsg, keyID)
+                    decmsg = self.connection.Dispatcher.replace_non_character(
+                        decmsg)
                     # \x00 chars are not allowed in C (so in GTK)
                     msgtxt = helpers.decode_string(decmsg.replace('\x00', ''))
                     encrypted = 'xep27'
Index: gajim-0.14.4/src/common/stanza_session.py
===================================================================
--- gajim-0.14.4.orig/src/common/stanza_session.py	2011-05-31 18:00:32.000000000 +0200
+++ gajim-0.14.4/src/common/stanza_session.py	2011-10-12 21:22:54.269106670 +0200
@@ -375,6 +375,9 @@
         for child in parsed.getChildren():
             stanza.addChild(node=child)
 
+        # replace non-character unicode
+        stranza = self.conn.connection.Dispatcher.replace_non_character(stanza)
+
         return stanza
 
     def decrypt(self, ciphertext):
Index: gajim-0.14.4/src/common/xmpp/dispatcher_nb.py
===================================================================
--- gajim-0.14.4.orig/src/common/xmpp/dispatcher_nb.py	2011-05-22 13:12:53.000000000 +0200
+++ gajim-0.14.4/src/common/xmpp/dispatcher_nb.py	2011-10-12 21:27:49.779117880 +0200
@@ -174,6 +174,9 @@
             raise ValueError('Incorrect stream start: (%s,%s). Terminating.'
                     % (tag, ns))
 
+    def replace_non_character(self, data):
+        return re.sub(self.invalid_chars_re, u'\ufffd'.encode('utf-8'), data)
+
     def ProcessNonBlocking(self, data):
         """
         Check incoming stream for data waiting
@@ -189,6 +192,7 @@
         # disconnect method will never be called.
         # Is this intended?
         # also look at transports start_disconnect()
+        data = self.replace_non_character(data)
         for handler in self._cycleHandlers:
             handler(self)
         if len(self._pendingExceptions) > 0:
